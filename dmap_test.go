package raopd

import (
	"bytes"
	"strings"
	"testing"

	"github.com/stretchr/testify/assert"
)

func testDmap(t *testing.T) *dmap {
	data := []byte{
		0x6d, 0x6c, 0x69, 0x74, 0x00, 0x00, 0x00, 0xa6, 0x6d, 0x70, 0x65, 0x72, 0x00, 0x00, 0x00, 0x08,
		0x60, 0x14, 0xa4, 0x10, 0x49, 0x19, 0x6f, 0xe0, 0x61, 0x73, 0x61, 0x6c, 0x00, 0x00, 0x00, 0x14,
		0x4d, 0x61, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x20, 0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x20,
		0x54, 0x6f, 0x75, 0x72, 0x61, 0x73, 0x61, 0x72, 0x00, 0x00, 0x00, 0x0b, 0x54, 0x68, 0x65, 0x20,
		0x42, 0x65, 0x61, 0x74, 0x6c, 0x65, 0x73, 0x61, 0x73, 0x63, 0x70, 0x00, 0x00, 0x00, 0x00, 0x61,
		0x73, 0x67, 0x6e, 0x00, 0x00, 0x00, 0x04, 0x52, 0x6f, 0x63, 0x6b, 0x6d, 0x69, 0x6e, 0x6d, 0x00,
		0x00, 0x00, 0x0f, 0x49, 0x20, 0x41, 0x6d, 0x20, 0x54, 0x68, 0x65, 0x20, 0x57, 0x61, 0x6c, 0x72,
		0x75, 0x73, 0x61, 0x73, 0x74, 0x6e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x06, 0x61, 0x73, 0x74, 0x63,
		0x00, 0x00, 0x00, 0x02, 0x00, 0x0b, 0x61, 0x73, 0x64, 0x6e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01,
		0x61, 0x73, 0x64, 0x6b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x63, 0x61, 0x70, 0x73, 0x00, 0x00, 0x00,
		0x01, 0x01, 0x61, 0x73, 0x74, 0x6d, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x3a, 0x8a}

	dm, err := newDmap(bytes.NewBuffer(data))
	assert.NoError(t, err)
	return dm
}

func crlf(in string) string {
	return strings.Replace(in, "\n", "\r\n", -1)
}

func TestDmapToJson(t *testing.T) {
	json := testDmap(t).String("JSON")

	expected := `{
    "dmap.listingitem": {
        "dmap.persistentid": 6923338917028130784,
        "daap.songalbum": "Magical Mystery Tour",
        "daap.songartist": "The Beatles",
        "daap.songcomposer": "",
        "daap.songgenre": "Rock",
        "dmap.itemname": "I Am The Walrus",
        "daap.songtracknumber": 6,
        "daap.songtrackcount": 11,
        "daap.songdiscnumber": 1,
        "daap.songdatakind": 0,
        "dacp.playerstate": 1,
        "daap.songtime": 277130
    }
}
`
	assert.Equal(t, crlf(expected), json)
}

func TestDmapToXML(t *testing.T) {
	json := testDmap(t).String("XML")

	expected := `<?xml version="1.0" encoding="UTF-8"?>
<dmap.listingitem>
    <dmap.persistentid>6923338917028130784</dmap.persistentid>
    <daap.songalbum>Magical Mystery Tour</daap.songalbum>
    <daap.songartist>The Beatles</daap.songartist>
    <daap.songcomposer></daap.songcomposer>
    <daap.songgenre>Rock</daap.songgenre>
    <dmap.itemname>I Am The Walrus</dmap.itemname>
    <daap.songtracknumber>6</daap.songtracknumber>
    <daap.songtrackcount>11</daap.songtrackcount>
    <daap.songdiscnumber>1</daap.songdiscnumber>
    <daap.songdatakind>0</daap.songdatakind>
    <dacp.playerstate>1</dacp.playerstate>
    <daap.songtime>277130</daap.songtime>
</dmap.listingitem>
`
	assert.Equal(t, crlf(expected), json)
}
